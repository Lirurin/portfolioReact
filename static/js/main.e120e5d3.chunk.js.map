{"version":3,"sources":["images/voltonov.jpg","images/taxi.jpg","images/glitch.jpg","components/Intro/Intro.js","components/Works/Card/Card.js","components/Works/Works.js","layout/Navigation/Navigation.js","components/Contacts/Contacts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Intro","props","handleCloseClick","useEffect","className","key","routes","path","to","activeClassName","exact","onClick","handleOpenClick","name","href","target","rel","Card","handleTriggerClick","setInfoTimer","infoClasses","state","infoCls","triggerClasses","triggerCls","indexOf","splice","push","setState","isTriggered","this","timer","setTimeout","clearTimeout","gitLink","cardData","gitUrl","objectFitImages","join","description","task","status","url","src","cardImg","alt","website","React","Component","Works","cards","Navigation","isNavOpen","Contacts","method","action","htmlFor","id","type","required","App","cardVolt","cardTaxi","cardGlitch","vh","window","innerHeight","document","documentElement","style","setProperty","addEventListener","isNavChanges","bind","match","CSSTransition","in","timeout","classNames","unmountOnExit","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e120e5d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/voltonov.da582e2b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/taxi.b3afd3db.jpg\";","module.exports = __webpack_public_path__ + \"static/media/glitch.f7342212.jpg\";","import React, {useEffect} from \"react\";\r\nimport \"./Intro.sass\"\r\n\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Intro = (props) => {\r\n    let  {\r\n      handleCloseClick,\r\n    } = props\r\n\r\n    useEffect(() => {\r\n      handleCloseClick()\r\n    }, []);\r\n\r\n    return (\r\n        <header className={\"Intro\"}>\r\n            <div className={'Intro__inner'}>\r\n                <h1 className={'Intro__title'}>Чумаков Эдуард</h1>\r\n                <p className={'Intro__subtitle'}>Frontend-разработчик</p>\r\n            </div>\r\n            <div className=\"Intro__nav\">\r\n                <NavLink\r\n                    key={props.routes[1].path}\r\n                    to={props.routes[1].path}\r\n                    className={'Intro__link'}\r\n                    activeClassName=\"active\"\r\n                    exact\r\n                    onClick={props.handleOpenClick}\r\n                >\r\n                {props.routes[1].name}\r\n                </NavLink>\r\n                <NavLink\r\n                    key={props.routes[2].path}\r\n                    to={props.routes[2].path}\r\n                    className={'Intro__link'}\r\n                    activeClassName=\"active\"\r\n                    exact\r\n                    onClick={props.handleOpenClick}\r\n                >\r\n                {props.routes[2].name}\r\n                </NavLink>\r\n            </div>\r\n            <div className=\"Intro__git\">\r\n                <a className={'Intro__git-link'} href=\"https://github.com/Lirurin\" target=\"_blank\" rel=\"noopener noreferrer\"> </a>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Intro","import React from 'react';\r\nimport './Card.sass';\r\nimport objectFitImages from 'object-fit-images';\r\n\r\nclass Card extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      infoCls: ['Card__info'],\r\n      triggerCls: ['Card__info-arrow'],\r\n      isTriggered: false,\r\n    };\r\n  }\r\n\r\n  handleTriggerClick = () => {\r\n    this.setInfoTimer();\r\n    let infoClasses = this.state.infoCls;\r\n    let triggerClasses = this.state.triggerCls;\r\n   \r\n    if (infoClasses.indexOf('Card__info--active')>=0) {\r\n      infoClasses.splice(infoClasses.indexOf('Card__info--active'), 1);\r\n      triggerClasses.splice(triggerClasses.indexOf('Card__info-arrow--active'), 1);\r\n      infoClasses.push('Card__info--unactive')\r\n    } else {\r\n      if (infoClasses.indexOf('Card__info--unactive')>=0){\r\n        infoClasses.splice(infoClasses.indexOf('Card__info--unactive'), 1)\r\n      }\r\n      infoClasses.push('Card__info--active');\r\n      triggerClasses.push('Card__info-arrow--active')\r\n    }\r\n\r\n    this.setState((state, props) => ({\r\n      infoCls: infoClasses,\r\n      triggerCls: triggerClasses,\r\n    }))\r\n  }\r\n\r\n  setInfoTimer() {\r\n    this.setState((state, props) => ({\r\n      isTriggered: true,\r\n    }))\r\n    let timer = setTimeout(() => {\r\n      this.setState((state, props) => ({\r\n        isTriggered: false,\r\n      }))\r\n      clearTimeout(timer)\r\n    },1000)\r\n  }\r\n\r\n  render() {\r\n    // let vueBlock\r\n    let gitLink\r\n    // if (this.props.cardData.vue) {\r\n    //    vueBlock = <span className={'Card__item-skill'} ></span>;\r\n    // }\r\n    if (this.props.cardData.gitUrl !== '') {\r\n      gitLink = <a href='this.props.cardData.gitUrl' className={'Card__item-git Card__info-text'}>Код на GitHub</a>;\r\n    }\r\n\r\n    objectFitImages();\r\n\r\n    return(\r\n    <div className={'Card__item'}>\r\n      <div \r\n        className={this.state.infoCls.join(' ')}\r\n      >\r\n        <div \r\n          className={this.state.triggerCls.join(' ')}\r\n          onClick={ !this.state.isTriggered ? this.handleTriggerClick : null} \r\n        >\r\n          <span className={'Card__info-line'}></span>\r\n          <span className={'Card__info-line'}></span>\r\n          <span className={'Card__info-line'}></span>\r\n          <span className={'Card__info-line'}></span>\r\n        </div>\r\n        <span className={'Card__info-text'}>\r\n          Описание: <br/>\r\n          {this.props.cardData.description}\r\n        </span>\r\n        <span className={'Card__info-text'}>\r\n          Задача: <br/>\r\n          {this.props.cardData.task}\r\n        </span>\r\n        <span className={'Card__info-text'}>\r\n          Статус проекта: <br/>\r\n          {this.props.cardData.status}\r\n        </span>\r\n        { gitLink }\r\n      </div>\r\n      <a href={this.props.cardData.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <img className={'Card__image'} src={this.props.cardData.cardImg} alt=\"...\"/>\r\n      </a>\r\n      <h3 className={'Card__item-title'}>{this.props.cardData.website}</h3>\r\n      <div className={'Card__item-skills'}>\r\n        <span className={'Card__item-skill'} ></span>\r\n        <span className={'Card__item-skill'} ></span>\r\n        <span className={'Card__item-skill'} ></span>\r\n        {/* { vueBlock } */}\r\n       </div>\r\n    </div>\r\n  ) \r\n  }\r\n}\r\n\r\nexport default Card","import React, {useEffect} from 'react'\r\nimport \"./Works.sass\"\r\nimport Card from './Card/Card';\r\n\r\nconst Works = (props)=> {\r\n\r\n  let {\r\n    handleOpenClick,\r\n    cards,\r\n  } = props\r\n\r\n  useEffect(() => {\r\n    handleOpenClick()\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Works\">\r\n      <h3 className={'Works__title'}>Работы</h3>\r\n      <div className=\"Works__cont\">\r\n        <Card cardData={cards[0]}/>\r\n        <Card cardData={cards[1]}/>\r\n        <Card cardData={cards[2]}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Works","import React from 'react'\r\nimport \"./Navigation.sass\"\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n      <nav className={props.isNavOpen ? 'nav open': 'nav'}>\r\n        <NavLink\r\n          key={props.routes[0].path}\r\n          to={props.routes[0].path}\r\n          className={'nav__link'}\r\n          activeClassName=\"active\"\r\n          onClick={props.handleCloseClick}\r\n          exact\r\n        />\r\n        <NavLink\r\n          key={props.routes[1].path}\r\n          to={props.routes[1].path}\r\n          className={'nav__link'}\r\n          activeClassName=\"active\"\r\n          exact\r\n        />\r\n        <NavLink\r\n          key={props.routes[2].path}\r\n          to={props.routes[2].path}\r\n          className={'nav__link'}\r\n          activeClassName=\"active\"\r\n          exact\r\n        />\r\n        <span className={'nav__frame'}>with</span> \r\n      </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React, {useEffect} from 'react'\r\nimport './Contacts.sass'\r\n\r\nconst Contacts = (props) => {\r\n    \r\n  let  {\r\n    handleOpenClick,\r\n  } = props\r\n    \r\n  useEffect(() => {\r\n    handleOpenClick()\r\n  }, []);\r\n  \r\n  return(\r\n    <section className='Contacts'>\r\n      <h3 className={'Contacts__title'}>Контакты</h3>\r\n      <div className={'Contacts__cont'}>\r\n        <form className={'Contacts__form'} method='POST' action=\"https://lirurin.github.io/zerosouler@gmail.com\">\r\n          <div className={'Contacts__form-top'}>\r\n            <label className={'Contacts__label'} htmlFor=\"contactEmail\">\r\n              Email\r\n              <input className={'Contacts__input'} id={'contactEmail'} type=\"email\" name=\"email\" required/>\r\n            </label>\r\n            <div className={'Contacts__links'}>\r\n              <div className={'Contacts__link-wrap'}>\r\n                Github\r\n                <a className={'Contacts__link'} href=\"https://github.com/Lirurin\" target=\"_blank\" rel=\"noopener noreferrer\"> </a>\r\n              </div>\r\n              <div className={'Contacts__link-wrap'}>\r\n                Резюме\r\n                <a className={'Contacts__link'} href=\"https://github.com/Lirurin\" target=\"_blank\" rel=\"noopener noreferrer\"> </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <label className={'Contacts__label'} htmlFor=\"contactComment\">\r\n            Сообщение\r\n            <textarea className={'Contacts__input Contacts__input--textarea'} id={'contactComment'} name=\"comment\" required></textarea>\r\n          </label>\r\n          <button className={'Contacts__submit'} type={'submit'}>Отправить</button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Contacts","import React from 'react';\r\nimport Intro from './components/Intro/Intro'\r\nimport Works from './components/Works/Works';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport {HashRouter as Router, Route} from 'react-router-dom';\r\nimport './App.sass';\r\nimport Navigation from './layout/Navigation/Navigation';\r\nimport Contacts from './components/Contacts/Contacts'\r\n//images\r\nimport cardVolt from \"./images/voltonov.jpg\"\r\nimport cardTaxi from \"./images/taxi.jpg\"\r\nimport cardGlitch from \"./images/glitch.jpg\"\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      routes: [\r\n        { path: '/', name: 'Интро', Component: Intro },\r\n        { path: '/works', name: 'Работы', Component: Works },\r\n        { path: '/contacts', name: 'Контакты', Component: Contacts },\r\n      ],\r\n      cards: [\r\n        {\r\n          website: 'voltonov',\r\n          url: 'https://voltonov.ru',\r\n          gitUrl: 'https://voltonov.ru',\r\n          description: 'Интернет-магазин светильников и комплектующих',\r\n          task: 'Верстка мобильной версии, правки десктоп-версии',\r\n          status: 'Доступен',\r\n          cardImg: cardVolt,\r\n          // vue: false\r\n        },\r\n        {\r\n          website: 'taxi-ubk',\r\n          url: 'https://voltonov.ru',\r\n          gitUrl: 'https://voltonov.ru',\r\n          description: 'Landing Page междугороднего такси по Крыму',\r\n          task: 'Верстка страницы',\r\n          status: 'Недоступен',\r\n          cardImg: cardTaxi,\r\n          // vue: false\r\n        },\r\n        {\r\n          website: 'glitch',\r\n          url: 'https://voltonov.ru',\r\n          gitUrl: 'https://voltonov.ru',\r\n          description: 'Пример работы. Интернет-магазин одежды в стиле \"киберпанк\"',\r\n          task: 'Верстка страницы',\r\n          status: 'Доступен',\r\n          cardImg: cardGlitch,\r\n          // vue: false\r\n        },\r\n        // {\r\n        //   website: 'symphony',\r\n        //   url: 'https://voltonov.ru',\r\n        //   gitUrl: 'https://voltonov.ru',\r\n        //   description: 'Пример работы. Landing Page ресторана итальянской кухни',\r\n        //   task: 'Верстка страницы',\r\n        //   status: 'Доступен',\r\n        //   cardImg: cardVolt,\r\n        //   // vue: true\r\n        // },\r\n      ],\r\n      isNavOpen: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // mobile browsers 100vh fix\r\n    let vh = window.innerHeight * 0.01;\r\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n    window.addEventListener('resize', () => {\r\n      let vh = window.innerHeight * 0.01;\r\n      document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n    });\r\n  }\r\n\r\n  handleOpenClick() {\r\n    if (!this.state.isNavOpen) {\r\n      this.setState((state, props) => ({\r\n        isNavOpen: true\r\n      }))\r\n    }\r\n  }\r\n\r\n  handleCloseClick() {\r\n    this.setState((state, props) => ({\r\n      isNavOpen: false,\r\n    }))\r\n  }\r\n\r\n\r\n  render() {\r\n      return (\r\n        <div className=\"App\">\r\n          <Router>\r\n            <Navigation \r\n              isNavOpen={this.state.isNavOpen} \r\n              isNavChanges={this.state.isNavChanges} \r\n              routes={this.state.routes} \r\n              handleCloseClick={this.handleCloseClick.bind(this)}\r\n            />\r\n            <div className={'cont'}>\r\n              <Route key={this.state.routes[0].path} exact path={this.state.routes[0].path}>\r\n                {({ match }) => (\r\n                  <CSSTransition\r\n                      in={match != null}\r\n                      timeout={300}\r\n                      classNames=\"page\"\r\n                      unmountOnExit\r\n                  >\r\n                    <div className=\"page\">\r\n                        <Intro handleCloseClick={this.handleCloseClick.bind(this)} handleOpenClick={this.handleOpenClick.bind(this)} routes={this.state.routes} />\r\n                    </div>\r\n                  </CSSTransition>\r\n                )}\r\n              </Route>\r\n              <Route key={this.state.routes[1].path} exact path={this.state.routes[1].path}>\r\n                {({ match }) => (\r\n                  <CSSTransition\r\n                      in={match != null}\r\n                      timeout={300}\r\n                      classNames=\"page--works\"\r\n                      unmountOnExit\r\n                  >\r\n                    <div className=\"page page--works\">\r\n                        <Works handleCloseClick={this.handleCloseClick.bind(this)} handleOpenClick={this.handleOpenClick.bind(this)} cards={this.state.cards} />\r\n                    </div>\r\n                  </CSSTransition>\r\n                )}\r\n              </Route>\r\n              <Route key={this.state.routes[2].path} exact path={this.state.routes[2].path}>\r\n                {({ match }) => (\r\n                  <CSSTransition\r\n                      in={match != null}\r\n                      timeout={300}\r\n                      classNames=\"page\"\r\n                      unmountOnExit\r\n                  >\r\n                    <div className=\"page\">\r\n                        <Contacts handleCloseClick={this.handleCloseClick.bind(this)} handleOpenClick={this.handleOpenClick.bind(this)} routes={this.state.routes} />\r\n                    </div>\r\n                  </CSSTransition>\r\n                )}\r\n              </Route>\r\n            </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}